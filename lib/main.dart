import 'dart:convert';
import 'package:collection/collection.dart';
import 'package:desktop_multi_window/desktop_multi_window.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:macos_ui/macos_ui.dart';
import 'package:polaris/pages/dashboard/dashboard.dart';
import 'package:polaris/pages/flights.dart';
import 'package:polaris/pages/systems/systems.dart';
import 'package:polaris/pages/telemetry.dart';

void main(List<String> args) {
  // if (args.firstOrNull == 'multi_window') {
  //   final windowId = int.parse(args[1]);
  //   final arguments = args[2].isEmpty
  //       ? const {}
  //       : jsonDecode(args[2]) as Map<String, dynamic>;
  //   runApp(AboutWindow(
  //     windowController: WindowController.fromWindowId(windowId),
  //     args: arguments,
  //   ));
  // } else {
  runApp(const App());
  // }
}

class App extends StatelessWidget {
  const App({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MacosApp(
      title: 'polaris',
      theme: MacosThemeData.light(),
      darkTheme: MacosThemeData.dark(),
      themeMode: ThemeMode.system,
      home: const MainView(),
      debugShowCheckedModeBanner: false,
    );
  }
}

class AboutWindow extends StatelessWidget {
  const AboutWindow({
    super.key,
    required this.windowController,
    required this.args,
  });

  final WindowController windowController;
  final Map? args;

  @override
  Widget build(BuildContext context) {
    return MacosApp(
      title: 'polaris',
      theme: MacosThemeData.light(),
      darkTheme: MacosThemeData.dark(),
      themeMode: ThemeMode.system,
      home: MacosWindow(
        child: MacosScaffold(
          children: [
            ContentArea(
              builder: (context, scrollController) {
                return Center(
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.center,
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      Text(
                        'About polaris',
                        style: MacosTheme.of(context).typography.largeTitle,
                      ),
                      const SizedBox(height: 8.0),
                      const Text(
                        'This is a starter application generated by mason_cli.',
                      ),
                    ],
                  ),
                );
              },
            ),
          ],
        ),
      ),
      debugShowCheckedModeBanner: false,
    );
  }
}

class MainView extends StatefulWidget {
  const MainView({super.key});

  @override
  State<MainView> createState() => _MainViewState();
}

class _MainViewState extends State<MainView> {
  int _pageIndex = 0;

  @override
  Widget build(BuildContext context) {
    return MacosWindow(
      sidebar: Sidebar(
        minWidth: 200,
        builder: (context, scrollController) => SidebarItems(
          currentIndex: _pageIndex,
          onChanged: (index) {
            setState(() => _pageIndex = index);
          },
          items: const [
            SidebarItem(
              leading: MacosIcon(CupertinoIcons.home),
              label: Text('Dashboard'),
            ),
            SidebarItem(
              leading: MacosIcon(CupertinoIcons.chart_bar_alt_fill),
              label: Text('Systems'),
            ),
            SidebarItem(
              leading: MacosIcon(CupertinoIcons.gauge),
              label: Text('Altimeter'),
            ),
            SidebarItem(
              leading: MacosIcon(CupertinoIcons.rocket_fill),
              label: Text('Flights'),
            ),
          ],
        ),
      ),
      child: IndexedStack(
        index: _pageIndex,
        children: const [
          DashboardPage(),
          SystemsPage(),
          TelemetryPage(),
          FlightsPage(),
        ],
      ),
    );
  }
}
